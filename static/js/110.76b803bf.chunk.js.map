{"version":3,"file":"static/js/110.76b803bf.chunk.js","mappings":"8LAmCA,UA/BqB,WACjB,IAAOA,GAAWC,EAAAA,EAAAA,MAAXD,QACP,GAA8BE,EAAAA,EAAAA,UAAU,MAAxC,eAAOC,EAAP,KAAgBC,EAAhB,KAOA,OAJAC,EAAAA,EAAAA,YAAU,WACNC,EAAAA,EAAAA,mBAA6BN,GAASO,MAAK,SAAAC,GAAC,OAAIJ,EAAWI,EAAEC,QAAjB,GAE/C,GAAE,KAEC,yBACMN,GAAWA,EAAQO,OAAS,GAC1B,wBACKP,EAAQQ,KAAI,SAAAC,GAAM,OACf,yBAEQ,4BACA,0CAAgBA,EAAOC,eAAeC,aACtC,uBAAIF,EAAOG,cAJVZ,EAAQa,GADF,OAYtB,8CAIhB,C,oBCjCD,IAAMC,EAAU,mCA2BhB,IAAMX,EAAY,CACdY,iBA1BJ,WAEI,OAAOC,MAAM,2DAAD,OAA4DF,IAAWV,MAAK,SAAAa,GAAQ,OAAGA,EAAIC,GAAWD,EAAIE,OAAeC,QAAQC,OAAO,IAAIC,MAAM,kCAAmC,GACpM,EAwBGC,mBAtBJ,SAA6B1B,GACzB,OAAOmB,MAAM,sCAAD,OAAuCnB,EAAvC,4BAAkEiB,EAAlE,2BAAmGV,MAAK,SAAAa,GAAQ,OAAGA,EAAIC,GAAWD,EAAIE,OAAeC,QAAQC,OAAO,IAAIC,MAAM,kCAAmC,GAChO,EAqBGE,iBAnBJ,SAA2BC,GACvB,OAAOT,MAAM,2DAAD,OACwCF,EADxC,iCACwEW,EADxE,gCAC4GrB,MAAK,SAAAa,GAAQ,OAAGA,EAAIC,GAAWD,EAAIE,OAAeC,QAAQC,OAAO,IAAIC,MAAM,kCAAmC,GACzO,EAiBGI,eAfJ,SAAyB7B,GACrB,OAAOmB,MAAM,sCAAD,OAAuCnB,EAAvC,4BAAkEiB,EAAlE,oBAA4FV,MAAK,SAAAa,GAAQ,OAAGA,EAAIC,GAAWD,EAAIE,OAAeC,QAAQC,OAAO,IAAIC,MAAM,kCAAmC,GACzN,EAcGK,YAZJ,SAAsB9B,GAClB,OAAOmB,MAAM,4CAAD,OACyBnB,EADzB,oBAC4CiB,EAD5C,oBACsEV,MAAK,SAAAa,GAAQ,OAAGA,EAAIC,GAAWD,EAAIE,OAAeC,QAAQC,OAAO,IAAIC,MAAM,kCAAmC,GACnM,GAYD,K","sources":["components/movieReviews/movieReviews.jsx","services/fetch-movie.jsx"],"sourcesContent":["import { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport ApiMovies from \"services/fetch-movie\" \n\nconst MovieReviews = () => {\n    const {movieId} = useParams()\n    const [reviews, setReviews] = useState (null)\n    \n\n    useEffect(() => {\n        ApiMovies.fetchReviewsMovies(movieId).then(d => setReviews(d.results))\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n    return (\n        <div>\n             {reviews && reviews.length > 0 ? (\n                <ul>\n                    {reviews.map(review => \n                        <li key={reviews.id}>\n                            {\n                                <div>\n                                <h4>{`Author: ${review.author_details.username}`}</h4>\n                                <p>{review.content}</p>\n                                </div>\n                                \n                            }\n                        </li>\n                    )}\n                </ul>\n             ) : <p>Reviews not found</p>}\n        </div>\n       \n    )\n}\n\nexport default MovieReviews","const API_KEY = \"0f4a49552ce13567b5c82d2d8d909ccf\"\n\nfunction fetchTrendMovies () {\n    \n    return fetch(`https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`).then(res => {if(res.ok){return res.json()} return Promise.reject(new Error('Nothing found for your request'))})\n}\n\nfunction fetchReviewsMovies (movieId) {\n    return fetch(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`).then(res => {if(res.ok){return res.json()} return Promise.reject(new Error('Nothing found for your request'))})\n}\n\nfunction fetchQueryMovies (query) {\n    return fetch(`\n    https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`).then(res => {if(res.ok){return res.json()} return Promise.reject(new Error('Nothing found for your request'))})\n}\n\nfunction fetchCastMovie (movieId) {\n    return fetch(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`).then(res => {if(res.ok){return res.json()} return Promise.reject(new Error('Nothing found for your request'))})\n}\n\nfunction fetchMovies (movieId) {\n    return fetch(`\n    https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`).then(res => {if(res.ok){return res.json()} return Promise.reject(new Error('Nothing found for your request'))})\n}\n\n\n\nconst ApiMovies = {\n    fetchTrendMovies,\n    fetchReviewsMovies,\n    fetchQueryMovies,\n    fetchCastMovie,\n    fetchMovies\n}\n\nexport default ApiMovies\n\n   "],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","ApiMovies","then","d","results","length","map","review","author_details","username","content","id","API_KEY","fetchTrendMovies","fetch","res","ok","json","Promise","reject","Error","fetchReviewsMovies","fetchQueryMovies","query","fetchCastMovie","fetchMovies"],"sourceRoot":""}