{"version":3,"file":"static/js/93.024f7de2.chunk.js","mappings":"2OAmEA,EA7DqB,WAAO,IAAD,EAChBA,GAAWC,EAAAA,EAAAA,MAAXD,QACP,GAAsCE,EAAAA,EAAAA,UAAS,MAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAO,WADIC,EAAAA,EAAAA,MACKC,aAAT,eAAgBF,OAAQ,IAOrC,OALAG,EAAAA,EAAAA,YAAW,WACPC,EAAAA,EAAAA,YAAsBX,GAASY,MAAK,SAAAC,GAAC,OAAIT,EAAeS,EAAnB,GAExC,GAAE,CAACb,KAGD,yBACEG,IAEG,4BACI,mBAAQW,UAAU,MAAMC,KAAK,SAASC,QAAS,kBAAMX,EAASE,EAAf,EAA/C,sBACA,iBAAKO,UAAU,UAAf,WACA,0BACI,gBAAKG,IAAG,0CAAqCd,EAAYe,aAAeC,IAAKhB,EAAYiB,WAG7F,iBAAKN,UAAU,cAAf,WACI,kCACQX,EAAYiB,MADpB,aAC8BjB,EAAYkB,aAAaC,MAAM,EAAG,GADhE,QAGA,6CAA8C,GAA1BnB,EAAYoB,aAAhC,QACA,sCACA,uBACKpB,EAAYqB,YAEjB,oCACA,uBACKrB,EAAYsB,OAAOC,KAAI,SAAAC,GAAE,gBAAOA,EAAGC,KAAV,iBAMtC,iBAAKd,UAAU,cAAf,WACQ,oDAGA,gBAAIA,UAAU,kBAAd,WACI,yBACI,SAAC,KAAD,CAAML,MAAO,CAACF,KAAAA,GAAOsB,GAAE,kBAAa7B,EAAb,SAA6Bc,UAAU,cAA9D,qBAEJ,yBACI,SAAC,KAAD,CAAML,MAAO,CAACF,KAAAA,GAAOsB,GAAE,kBAAa7B,EAAb,YAAgCc,UAAU,cAAjE,2BAGR,SAAC,KAAD,WAOnB,C,oBCjED,IAAMgB,EAAU,mCA2BhB,IAAMnB,EAAY,CACdoB,iBA1BJ,WAEI,OAAOC,MAAM,2DAAD,OAA4DF,IAAWlB,MAAK,SAAAqB,GAAQ,OAAGA,EAAIC,GAAWD,EAAIE,OAAeC,QAAQC,OAAO,IAAIC,MAAM,kCAAmC,GACpM,EAwBGC,mBAtBJ,SAA6BvC,GACzB,OAAOgC,MAAM,sCAAD,OAAuChC,EAAvC,4BAAkE8B,EAAlE,2BAAmGlB,MAAK,SAAAqB,GAAQ,OAAGA,EAAIC,GAAWD,EAAIE,OAAeC,QAAQC,OAAO,IAAIC,MAAM,kCAAmC,GAChO,EAqBGE,iBAnBJ,SAA2BC,GACvB,OAAOT,MAAM,2DAAD,OACwCF,EADxC,iCACwEW,EADxE,gCAC4G7B,MAAK,SAAAqB,GAAQ,OAAGA,EAAIC,GAAWD,EAAIE,OAAeC,QAAQC,OAAO,IAAIC,MAAM,kCAAmC,GACzO,EAiBGI,eAfJ,SAAyB1C,GACrB,OAAOgC,MAAM,sCAAD,OAAuChC,EAAvC,4BAAkE8B,EAAlE,oBAA4FlB,MAAK,SAAAqB,GAAQ,OAAGA,EAAIC,GAAWD,EAAIE,OAAeC,QAAQC,OAAO,IAAIC,MAAM,kCAAmC,GACzN,EAcGK,YAZJ,SAAsB3C,GAClB,OAAOgC,MAAM,4CAAD,OACyBhC,EADzB,oBAC4C8B,EAD5C,oBACsElB,MAAK,SAAAqB,GAAQ,OAAGA,EAAIC,GAAWD,EAAIE,OAAeC,QAAQC,OAAO,IAAIC,MAAM,kCAAmC,GACnM,GAYD,K","sources":["components/movieDetails/movieDetails.jsx","services/fetch-movie.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\"\nimport { useParams, useNavigate, Link, Outlet, useLocation} from \"react-router-dom\"\nimport ApiMovies from \"services/fetch-movie\" \nimport \"../movieDetails/movieDetails.css\"\n\n\nconst MovieDetails = () => {\n    const {movieId} = useParams()\n    const [actualMovie, setActualMovie] = useState(null)\n    const navigate = useNavigate()\n    const location = useLocation()\n    const from = location.state?.from || '/'\n\n    useEffect (() => {\n        ApiMovies.fetchMovies(movieId).then(d => setActualMovie(d))\n\n    }, [movieId])\n\n    return (\n       <div>\n        {actualMovie && (\n            \n            <div>\n                <button className=\"btn\" type=\"button\" onClick={() => navigate(from)}>Go back</button>\n                <div className=\"wrapper\">\n                <div>\n                    <img src={`https://image.tmdb.org/t/p/w300/${actualMovie.poster_path}`} alt={actualMovie.title}/>\n                </div>\n            \n                <div className=\"description\">\n                    <h2>\n                        {`${actualMovie.title} (${actualMovie.release_date.slice(0, 4)})`}\n                    </h2>\n                    <p>{`User score: ${(actualMovie.vote_average)*10}%`}</p>\n                    <h3>Overview</h3>\n                    <p>\n                        {actualMovie.overview}\n                    </p>\n                    <h3>Genres</h3>\n                    <p>\n                        {actualMovie.genres.map(el => `${el.name} `)}\n                    </p>\n                </div>\n                \n                   \n            </div>\n            <div className=\"moreDetails\">\n                    <h3>\n                        Additional information\n                    </h3>\n                    <ul className=\"moreDetailsList\">\n                        <li>\n                            <Link state={{from}} to={`/movies/${movieId}/cast`} className=\"linkDetails\">Cast</Link>\n                        </li>\n                        <li>\n                            <Link state={{from}} to={`/movies/${movieId}/reviews`} className=\"linkDetails\">Reviews</Link>\n                        </li>\n                    </ul>\n                    <Outlet/>                \n            </div>\n        </div>\n       )}\n       </div>\n    )\n    \n}\n\nexport default MovieDetails","const API_KEY = \"0f4a49552ce13567b5c82d2d8d909ccf\"\n\nfunction fetchTrendMovies () {\n    \n    return fetch(`https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`).then(res => {if(res.ok){return res.json()} return Promise.reject(new Error('Nothing found for your request'))})\n}\n\nfunction fetchReviewsMovies (movieId) {\n    return fetch(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`).then(res => {if(res.ok){return res.json()} return Promise.reject(new Error('Nothing found for your request'))})\n}\n\nfunction fetchQueryMovies (query) {\n    return fetch(`\n    https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`).then(res => {if(res.ok){return res.json()} return Promise.reject(new Error('Nothing found for your request'))})\n}\n\nfunction fetchCastMovie (movieId) {\n    return fetch(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`).then(res => {if(res.ok){return res.json()} return Promise.reject(new Error('Nothing found for your request'))})\n}\n\nfunction fetchMovies (movieId) {\n    return fetch(`\n    https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`).then(res => {if(res.ok){return res.json()} return Promise.reject(new Error('Nothing found for your request'))})\n}\n\n\n\nconst ApiMovies = {\n    fetchTrendMovies,\n    fetchReviewsMovies,\n    fetchQueryMovies,\n    fetchCastMovie,\n    fetchMovies\n}\n\nexport default ApiMovies\n\n   "],"names":["movieId","useParams","useState","actualMovie","setActualMovie","navigate","useNavigate","from","useLocation","state","useEffect","ApiMovies","then","d","className","type","onClick","src","poster_path","alt","title","release_date","slice","vote_average","overview","genres","map","el","name","to","API_KEY","fetchTrendMovies","fetch","res","ok","json","Promise","reject","Error","fetchReviewsMovies","fetchQueryMovies","query","fetchCastMovie","fetchMovies"],"sourceRoot":""}