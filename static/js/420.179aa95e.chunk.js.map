{"version":3,"file":"static/js/420.179aa95e.chunk.js","mappings":"oOAgDA,EA1Ce,WACX,OAAsCA,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAkCF,EAAAA,EAAAA,UAAS,MAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SAC/B,GAAsBT,EAAAA,EAAAA,YAAtB,eAAOU,EAAP,KAAYC,EAAZ,KAcA,OALAC,EAAAA,EAAAA,YAAW,WACPJ,GAASK,EAAAA,EAAAA,iBAA2BL,GAAOM,MAAK,SAAAC,GAAC,OAAIX,EAAaW,EAAEC,QAAnB,GACpD,GAAE,CAACR,KAIA,iCACA,kBAAMS,SAdW,SAACC,GAClBA,EAAEC,iBACFZ,EAAgB,CAACC,MAAOP,IACxBU,GAAO,iBAAM,EAAN,GAEV,EASG,WACI,kBACAS,UAAU,QACVC,KAAK,OACLC,MAAOZ,EACPa,KAAK,QACLC,YAAY,cACZC,QAAQ,yHACRC,SAAU,SAACR,GAAD,OAAOhB,EAAegB,EAAES,cAAcL,MAAtC,KAEV,mBAAQF,UAAU,WAAWC,KAAK,SAAlC,wBAGJ,wBACKlB,GAAaA,EAAUyB,KAAI,SAAAC,GAAK,OAAI,yBAAmB,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAA3B,SAAkCF,EAAMG,SAAlDH,EAAME,GAAnB,QAK5C,C,oBC9CD,IAAME,EAAU,mCA2BhB,IAAMpB,EAAY,CACdqB,iBA1BJ,WAEI,OAAOC,MAAM,2DAAD,OAA4DF,IAAWnB,MAAK,SAAAsB,GAAQ,OAAGA,EAAIC,GAAWD,EAAIE,OAAeC,QAAQC,OAAO,IAAIC,MAAM,kCAAmC,GACpM,EAwBGC,mBAtBJ,SAA6BC,GACzB,OAAOR,MAAM,sCAAD,OAAuCQ,EAAvC,4BAAkEV,EAAlE,2BAAmGnB,MAAK,SAAAsB,GAAQ,OAAGA,EAAIC,GAAWD,EAAIE,OAAeC,QAAQC,OAAO,IAAIC,MAAM,kCAAmC,GAChO,EAqBGG,iBAnBJ,SAA2BpC,GACvB,OAAO2B,MAAM,2DAAD,OACwCF,EADxC,iCACwEzB,EADxE,gCAC4GM,MAAK,SAAAsB,GAAQ,OAAGA,EAAIC,GAAWD,EAAIE,OAAeC,QAAQC,OAAO,IAAIC,MAAM,kCAAmC,GACzO,EAiBGI,eAfJ,SAAyBF,GACrB,OAAOR,MAAM,sCAAD,OAAuCQ,EAAvC,4BAAkEV,EAAlE,oBAA4FnB,MAAK,SAAAsB,GAAQ,OAAGA,EAAIC,GAAWD,EAAIE,OAAeC,QAAQC,OAAO,IAAIC,MAAM,kCAAmC,GACzN,EAcGK,YAZJ,SAAsBH,GAClB,OAAOR,MAAM,4CAAD,OACyBQ,EADzB,oBAC4CV,EAD5C,oBACsEnB,MAAK,SAAAsB,GAAQ,OAAGA,EAAIC,GAAWD,EAAIE,OAAeC,QAAQC,OAAO,IAAIC,MAAM,kCAAmC,GACnM,GAYD,K","sources":["components/movies/movies.jsx","services/fetch-movie.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { useSearchParams } from \"react-router-dom\"\nimport ApiMovies from \"services/fetch-movie\"\nimport \"../movies/movies.css\"\n\nconst Movies = () => {\n    const [searchMovie, setSearchMovie] = useState('')\n    const [movieList, setMovieList] = useState(null)\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get(\"query\");\n    const [val, setVal] = useState()\n\n    const hundleSubmit = (e) => {\n        e.preventDefault();\n        setSearchParams({query: searchMovie})\n        setVal(() => \"\")\n                \n    }\n\n    useEffect (() => {\n        query && ApiMovies.fetchQueryMovies(query).then(d => setMovieList(d.results))\n    }, [query])\n\n\n    return (\n        <>\n        <form onSubmit={hundleSubmit}>\n            <input\n            className=\"input\"\n            type=\"text\"\n            value={val}\n            name=\"movie\"\n            placeholder=\"Input title\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            onChange={(e) => setSearchMovie(e.currentTarget.value)}/>\n            \n            <button className=\"form-btn\" type=\"submit\">search</button>\n\n        </form>\n        <ul>\n            {movieList && movieList.map(movie => <li key={movie.id}><Link to={`/movies/${movie.id}`}>{movie.title}</Link></li>)}\n        </ul>\n        </>\n        \n    )\n}\n\nexport default Movies ","const API_KEY = \"0f4a49552ce13567b5c82d2d8d909ccf\"\n\nfunction fetchTrendMovies () {\n    \n    return fetch(`https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`).then(res => {if(res.ok){return res.json()} return Promise.reject(new Error('Nothing found for your request'))})\n}\n\nfunction fetchReviewsMovies (movieId) {\n    return fetch(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`).then(res => {if(res.ok){return res.json()} return Promise.reject(new Error('Nothing found for your request'))})\n}\n\nfunction fetchQueryMovies (query) {\n    return fetch(`\n    https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`).then(res => {if(res.ok){return res.json()} return Promise.reject(new Error('Nothing found for your request'))})\n}\n\nfunction fetchCastMovie (movieId) {\n    return fetch(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`).then(res => {if(res.ok){return res.json()} return Promise.reject(new Error('Nothing found for your request'))})\n}\n\nfunction fetchMovies (movieId) {\n    return fetch(`\n    https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`).then(res => {if(res.ok){return res.json()} return Promise.reject(new Error('Nothing found for your request'))})\n}\n\n\n\nconst ApiMovies = {\n    fetchTrendMovies,\n    fetchReviewsMovies,\n    fetchQueryMovies,\n    fetchCastMovie,\n    fetchMovies\n}\n\nexport default ApiMovies\n\n   "],"names":["useState","searchMovie","setSearchMovie","movieList","setMovieList","useSearchParams","searchParams","setSearchParams","query","get","val","setVal","useEffect","ApiMovies","then","d","results","onSubmit","e","preventDefault","className","type","value","name","placeholder","pattern","onChange","currentTarget","map","movie","to","id","title","API_KEY","fetchTrendMovies","fetch","res","ok","json","Promise","reject","Error","fetchReviewsMovies","movieId","fetchQueryMovies","fetchCastMovie","fetchMovies"],"sourceRoot":""}