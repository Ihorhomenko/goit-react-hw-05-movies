{"version":3,"file":"static/js/291.d3ad4b72.chunk.js","mappings":"8LA6BA,UAzBwB,WACpB,IAAOA,GAAWC,EAAAA,EAAAA,MAAXD,QACP,GAA0BE,EAAAA,EAAAA,UAAU,MAApC,eAAOC,EAAP,KAAcC,EAAd,KAMA,OAJAC,EAAAA,EAAAA,YAAU,WACNC,EAAAA,EAAAA,eAAyBN,GAASO,MAAK,SAAAC,GAAC,OAAIJ,EAASI,EAAEC,KAAf,GAE3C,GAAE,KAEC,yBACMN,IACE,wBACKA,EAAMO,KAAI,SAAAD,GAAI,OACf,0BACKA,EAAKE,eAAgB,gBAAKC,IAAG,0CAAqCH,EAAKE,cAAgBE,IAAKJ,EAAKK,aAClG,uBAAIL,EAAKK,cAFJL,EAAKM,GADC,OAWlC,C,oBC3BD,IAAMC,EAAU,mCA2BhB,IAAMV,EAAY,CACdW,iBA1BJ,WAEI,OAAOC,MAAM,2DAAD,OAA4DF,IAAWT,MAAK,SAAAY,GAAQ,OAAGA,EAAIC,GAAWD,EAAIE,OAAeC,QAAQC,OAAO,IAAIC,MAAM,kCAAmC,GACpM,EAwBGC,mBAtBJ,SAA6BzB,GACzB,OAAOkB,MAAM,sCAAD,OAAuClB,EAAvC,4BAAkEgB,EAAlE,2BAAmGT,MAAK,SAAAY,GAAQ,OAAGA,EAAIC,GAAWD,EAAIE,OAAeC,QAAQC,OAAO,IAAIC,MAAM,kCAAmC,GAChO,EAqBGE,iBAnBJ,SAA2BC,GACvB,OAAOT,MAAM,2DAAD,OACwCF,EADxC,iCACwEW,EADxE,gCAC4GpB,MAAK,SAAAY,GAAQ,OAAGA,EAAIC,GAAWD,EAAIE,OAAeC,QAAQC,OAAO,IAAIC,MAAM,kCAAmC,GACzO,EAiBGI,eAfJ,SAAyB5B,GACrB,OAAOkB,MAAM,sCAAD,OAAuClB,EAAvC,4BAAkEgB,EAAlE,oBAA4FT,MAAK,SAAAY,GAAQ,OAAGA,EAAIC,GAAWD,EAAIE,OAAeC,QAAQC,OAAO,IAAIC,MAAM,kCAAmC,GACzN,EAcGK,YAZJ,SAAsB7B,GAClB,OAAOkB,MAAM,4CAAD,OACyBlB,EADzB,oBAC4CgB,EAD5C,oBACsET,MAAK,SAAAY,GAAQ,OAAGA,EAAIC,GAAWD,EAAIE,OAAeC,QAAQC,OAAO,IAAIC,MAAM,kCAAmC,GACnM,GAYD,K","sources":["components/castInformation/castInformation.jsx","services/fetch-movie.jsx"],"sourcesContent":["import { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport ApiMovies from \"services/fetch-movie\" \n\nconst CastInformation = () => {\n    const {movieId} = useParams()\n    const [casts, setCasts] = useState (null)\n\n    useEffect(() => {\n        ApiMovies.fetchCastMovie(movieId).then(d => setCasts(d.cast))\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n    return (\n        <div>\n             {casts && (\n                <ul>\n                    {casts.map(cast => \n                    <li key={cast.id}>\n                        {cast.profile_path && <img src={`https://image.tmdb.org/t/p/w200/${cast.profile_path}`} alt={cast.character}/>}\n                        <p>{cast.character}</p>\n                    </li>\n                        )}\n                </ul>\n             )}\n        </div>\n       \n    )\n}\n\nexport default CastInformation","const API_KEY = \"0f4a49552ce13567b5c82d2d8d909ccf\"\n\nfunction fetchTrendMovies () {\n    \n    return fetch(`https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`).then(res => {if(res.ok){return res.json()} return Promise.reject(new Error('Nothing found for your request'))})\n}\n\nfunction fetchReviewsMovies (movieId) {\n    return fetch(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`).then(res => {if(res.ok){return res.json()} return Promise.reject(new Error('Nothing found for your request'))})\n}\n\nfunction fetchQueryMovies (query) {\n    return fetch(`\n    https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`).then(res => {if(res.ok){return res.json()} return Promise.reject(new Error('Nothing found for your request'))})\n}\n\nfunction fetchCastMovie (movieId) {\n    return fetch(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`).then(res => {if(res.ok){return res.json()} return Promise.reject(new Error('Nothing found for your request'))})\n}\n\nfunction fetchMovies (movieId) {\n    return fetch(`\n    https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`).then(res => {if(res.ok){return res.json()} return Promise.reject(new Error('Nothing found for your request'))})\n}\n\n\n\nconst ApiMovies = {\n    fetchTrendMovies,\n    fetchReviewsMovies,\n    fetchQueryMovies,\n    fetchCastMovie,\n    fetchMovies\n}\n\nexport default ApiMovies\n\n   "],"names":["movieId","useParams","useState","casts","setCasts","useEffect","ApiMovies","then","d","cast","map","profile_path","src","alt","character","id","API_KEY","fetchTrendMovies","fetch","res","ok","json","Promise","reject","Error","fetchReviewsMovies","fetchQueryMovies","query","fetchCastMovie","fetchMovies"],"sourceRoot":""}